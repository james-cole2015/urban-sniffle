Parameters:
  RandomNumber:
    Type: "Number"
    Description: "A random number used to generate unique bucket names"
    
  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instances"

Resources:
  Week02Bucket00:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "week-02-bucket00-${RandomNumber}"
      AccessControl: "PublicRead"
      
  Week02Bucket01:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "week-02-bucket01-${RandomNumber}"
      AccessControl: "PublicRead"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  Week02VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "15.0.0.0/16"
      Tags:
        - Key: Name
          Value: "Week-02 VPC"

  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref Week02VPC
      CidrBlock: "15.0.1.0/24"
      MapPublicIpOnLaunch: true

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref Week02VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref Week02VPC

  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: "VPCGatewayAttachment"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  LinuxInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      ImageId: "ami-0c41531b8d18cc72b" # RHEL 9 AMI ID
      KeyName: !Ref KeyName
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: " Week 02 RHEL Instance"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          echo "Insolence? We are pirates. We donâ€™t even know what that means." > /var/www/html/index.html
          systemctl start httpd 
          yum install wget -y 
          wget https://github.com/mingrammer/flog/releases/download/v0.4.3/flog_0.4.3_linux_amd64.tar.gz
          tar -xvf flog_0.4.3_linux_amd64.tar.gz -C /usr/bin
          touch totally_real_logs
          flog > totally_real_logs

  EC2InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: CloudWatchAgentServerPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'cloudwatch:PutMetricData'
                  - "ec2:DescribeTags"
                  - "logs:DescribeLogStreams"
                  - "logs:DescribeLogGroups"
                Resource: '*'
            Statement:
              - Effect: Allow
                Action:
                - "ssm:GetParameter"
                - "ssm:PutParameter"
                Resource: 'arn:aws:ssm:*:*:parameter/AmazonCloudWatch-*'
Outputs:
  Week02Bucket00ID:
    Value: !Ref Week02Bucket00
  Week02Bucket01ID:
    Value: !Ref Week02Bucket01
  Week02VPCID:
    Value: !Ref Week02VPC
  PublicSubnetID:
    Value: !Ref PublicSubnet
  InternetGatewayID:
    Value: !Ref InternetGateway
  VPCGatewayAttachmentID:
    Value: !Ref VPCGatewayAttachment
  PublicRouteTableID:
    Value: !Ref PublicRouteTable
  PublicRouteID:
    Value: !Ref PublicRoute
  SubnetRouteTableAssociationID:
    Value: !Ref SubnetRouteTableAssociation
  LinuxInstanceID: 
    Value: !Ref LinuxInstance
  IamInstanceProfileID:
    Value: !Ref EC2InstanceRole
