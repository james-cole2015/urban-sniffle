---
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  VpcCidr:
    Type: "String"
    Default: "10.0.0.0/16"
    Description: "CIDR block for the VPC"
  PublicSubnetCidr:
    Type: "String"
    Default: "10.0.1.0/24"
    Description: "CIDR block for the public subnet"
  PrivateSubnetCidr:
    Type: "String"
    Default: "10.0.2.0/24"
    Description: "CIDR block for the private subnet"

Resources:
  MyVpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "MyVPC"

  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: !Ref PublicSubnetCidr
      VpcId: !Ref MyVpc
      AvailabilityZone: !Select [0, !GetAZs ""]

  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: !Ref PrivateSubnetCidr
      VpcId: !Ref MyVpc
      AvailabilityZone: !Select [1, !GetAZs ""]

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "MyIGW"

  GatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref MyVpc
      InternetGatewayId: !Ref InternetGateway

  NATGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      SubnetId: !Ref PublicSubnet
      AllocationId: !Ref EIPAllocationId
      Tags:
        - Key: "Name"
          Value: "MyNATGateway"

  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: "Name"
          Value: "MyPrivateRouteTable"

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: "Name"
          Value: "MyPublicRouteTable"

  PrivateRoute:
    Type: "AWS::EC2::Route"
    DependsOn: "GatewayAttachment"
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NATGateway

  PublicRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PrivateSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  PublicSubnetRoute
  PublicSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "public-sg"
      GroupDescription: "Allow inbound SSH traffic"
      VpcId: !Ref MyVpc
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"

  PrivateSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "private-sg"
      GroupDescription: "Allow inbound SSH traffic and outbound internet access"
      VpcId: !Ref MyVpc
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
          #SourceSecurityGroupId: !Ref PublicSecurityGroup
